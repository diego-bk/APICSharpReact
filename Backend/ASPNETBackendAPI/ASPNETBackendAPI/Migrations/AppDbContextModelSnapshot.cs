// <auto-generated />
using System;
using ASPNETBackendAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPNETBackendAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASPNETBackendAPI.Models.Cita", b =>
                {
                    b.Property<int>("CitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitaId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_hora");

                    b.Property<int>("MascotaId")
                        .HasColumnType("int")
                        .HasColumnName("mascota_id");

                    b.Property<int>("VeterinarioId")
                        .HasColumnType("int")
                        .HasColumnName("veterinario_id");

                    b.HasKey("CitaId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("citas");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("email");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("telefono");

                    b.HasKey("ClienteId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Mascota", b =>
                {
                    b.Property<int>("MascotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mascota_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MascotaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("especie");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("nombre");

                    b.HasKey("MascotaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("mascotas");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Tratamiento", b =>
                {
                    b.Property<int>("TratamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tratamiento_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TratamientoId"));

                    b.Property<int>("CitaId")
                        .HasColumnType("int")
                        .HasColumnName("cita_id");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Notas")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("notas");

                    b.HasKey("TratamientoId");

                    b.HasIndex("CitaId");

                    b.ToTable("tratamientos");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("contrasena");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("rol");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int")
                        .HasColumnName("veterinario_id");

                    b.HasKey("UsuarioId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Veterinario", b =>
                {
                    b.Property<int>("VeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("veterinario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VeterinarioId"));

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("email");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("especialidad");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("nombre_completo");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("telefono");

                    b.HasKey("VeterinarioId");

                    b.ToTable("veterinarios");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Cita", b =>
                {
                    b.HasOne("ASPNETBackendAPI.Models.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNETBackendAPI.Models.Veterinario", "Veterinario")
                        .WithMany("Citas")
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Mascota", b =>
                {
                    b.HasOne("ASPNETBackendAPI.Models.Cliente", "Cliente")
                        .WithMany("Mascotas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Tratamiento", b =>
                {
                    b.HasOne("ASPNETBackendAPI.Models.Cita", "Cita")
                        .WithMany("Tratamientos")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Usuario", b =>
                {
                    b.HasOne("ASPNETBackendAPI.Models.Veterinario", "Veterinario")
                        .WithMany("Usuarios")
                        .HasForeignKey("VeterinarioId");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Cita", b =>
                {
                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Cliente", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Mascota", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("ASPNETBackendAPI.Models.Veterinario", b =>
                {
                    b.Navigation("Citas");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
